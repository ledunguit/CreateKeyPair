<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="dragControl.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>